name: Test
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-20.04
    steps:
      - name: Enable experimental features for the Docker CLI
        run: |
          mkdir -p ~/.docker
          echo $'{\n  "experimental": "enabled"\n}' | sudo tee ~/.docker/config.json
          sudo service docker restart
          docker version -f '{{.Client.Experimental}}'
          docker buildx version
      - name: Setup a Docker builder
        run: |
          docker buildx create --name ci --use
          docker buildx inspect --bootstrap
      - name: Set up containerd
        uses: crazy-max/ghaction-setup-containerd@v1
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.15.2'
      - uses: actions/checkout@v2
      - name: Export the OCI image
        run: docker buildx build --tag hello -o type=oci,dest=- . > hello.tar
      - name: Build the binary
        run: go build -o main ./main.go
      - name: Import the OCI image in containerd
        run: |
          sudo ctr -n=example images import hello.tar
      # NOTE: Cannot run the binaries if there's different versions of glibc; for Debian Buster images we need at least Ubuntu 20.04.
      # https://packages.ubuntu.com/bionic/libc6-dev-armhf-cross
      # https://packages.debian.org/buster/libc6-dev-armhf-cross
      # - name: Verify the binaries
      #   run: |
      #     unset LD_LIBRARY_PATH

      #     qemu-arm -L /usr/arm-linux-gnueabihf/ ./bin/hello_server &
      #     sleep 1

      #     out=$(qemu-arm -L /usr/arm-linux-gnueabihf/ ./bin/hello_client John)

      #     if ! echo "$out" | grep -q "Hello, John!" ; then
      #       echo "Binary output is not ok"
      #       echo "$out"
      #       exit 1
      #     fi
